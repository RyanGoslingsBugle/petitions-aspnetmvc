@model Coursework.Models.CauseVM

@{
    ViewBag.Title = Model.Title + " by " + Model.Member.Name;
    var creatorPath = Model.Member.ImagePath == null ? "/images/user.jpeg" : Model.Member.ImagePath;
}

<form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>

<div class="row">
    <div class="cause-page-header mb-4">
        <div class="profile-page-text">
            <img src="@creatorPath" class="img-thumbnail" />
            <h2>@Html.DisplayFor(model => model.Title)</h2>
            <p>Created by @Html.DisplayFor(model => model.Member.Name) to send to @Html.DisplayFor(model => model.Target)</p>
            @if (Session["UserID"] != null && (string)Session["UserID"] != Model.Member.ID.ToString())
            {
                if (ViewBag.signed == null)
                {
                    <button class="btn btn-primary" id="signButton" href="/causes/sign/@Model.ID">Sign</button>
                }
            }
            @if ((string)Session["UserID"] == Model.Member.ID.ToString() || (string)Session["Role"] == "Admin")
            {
                <a class="btn btn-warning" href="/causes/edit/@Model.ID">Edit</a>
            }
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h4>@Html.DisplayFor(model => model.Pledge)</h4>
            <p>@Html.DisplayFor(model => model.Description)</p>
        </div>
        <div class="col-md-6">
            <div class="border p-3">
                <h4>Share on social media</h4>
                <div class="sharethis-inline-share-buttons"></div>
            </div>
            <div id="partialResult">
                @{
                    Html.RenderPartial("Signers", Model);
                }
            </div>
        </div>
    </div>
</div>

@*Anti-forgery token in ajax posts, Stack Overflow, Jeremy Weir, 02/11/10, https://stackoverflow.com/questions/4074199/jquery-ajax-calls-and-the-html-antiforgerytoken*@

<script type="text/javascript">
    $(document).ready(function () {
        $('.cause-page-header').css('background-image', 'url("@Model.ImageURL")');

        $('#signButton').on('click', function (event) {
            // prevent following link
            event.preventDefault();
            // do ajax call to signing route
            $.ajax({
                url: $(this).attr('href'),
                method: 'POST',
                data: {
                    id: @Model.ID.ToString(),
                    __RequestVerificationToken: $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val()
                },
                success: function (result) {
                    setTimeout(function () {
                        window.location.reload(true);
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
            return false;
        });

        // self-invokoing timeout function courtesy of stack overflow, drewish, 19/02/11, https://stackoverflow.com/questions/5052543/how-to-fire-ajax-request-periodically
        (function worker() {
            $.ajax({
                url: '/causes/getupdate/@Model.ID',
                success: function (result) {
                    $('#partialResult').html(result);
                },
                complete: function () {
                    setTimeout(worker, 3000);
                }
            });
        })();
    });

</script>